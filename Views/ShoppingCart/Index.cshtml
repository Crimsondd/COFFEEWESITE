@model ShoppingCart
@{
    ViewData["Title"] = "Giỏ hàng của bạn";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<link href="~/css/shopingcart.css" rel="stylesheet" />

<section class="h-100 gradient-custom">
    <div class="container py-5">
        <div class="row d-flex justify-content-center my-4">
            <div class="col-md-8">
                @if (Model.Items.Count > 0)
                {
                    <div class="card mb-4">
                        <div class="card-header py-3 d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">@ViewData["Title"] - @Model.Items.Count món</h5>
                            <form asp-action="RemoveAllFromCart" asp-controller="ShoppingCart" method="post">
                                <button type="submit" class="btn btn-danger btn-lg">Xóa toàn bộ giỏ hàng</button>
                            </form>
                        </div>
                        <div class="card-body">
                            @foreach (var item in Model.Items)
                            {
                                <div class="row align-items-center">
                                    <div class="col-md-6 mb-4 mb-md-0">
                                        <p><strong>@item.Name</strong></p>
                                        <p>Giá: @item.Price.ToString("C0", new CultureInfo("vi-VN"))</p>
                                    </div>
                                    <div class="col-md-4 mb-4 mb-md-0">
                                        <div class="d-flex align-items-center">
                                            <form id="quantity-form-@item.ProductId" asp-controller="ShoppingCart" asp-action="UpdateQuantity" method="post" style="display: inline-block;">
                                                <input type="hidden" name="productId" value="@item.ProductId">
                                                <div class="input-group quantity-control">
                                                    <button type="button" class="btn btn-outline-secondary btn-sm" data-action="decrease" onclick="updateQuantity('@item.ProductId', this)">
                                                        –
                                                    </button>
                                                    <input type="number" name="newQuantity" id="quantity-@item.ProductId" value="@item.Quantity" min="1" class="small-quantity-input form-control text-center" style="max-width: 60px;" onchange="autoSubmit('@item.ProductId')">
                                                    <button type="button" class="btn btn-outline-secondary btn-sm" data-action="increase" onclick="updateQuantity('@item.ProductId', this)">
                                                        +
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="col-md-2 text-center" style="float: right; padding: 10px;">
                                        <form asp-action="RemoveFromCart" asp-controller="ShoppingCart" method="post">
                                            <input type="hidden" name="productId" value="@item.ProductId" />
                                            <button type="submit" class="btn btn-danger btn-lg">Xóa</button>
                                        </form>
                                    </div>
                                </div>
                                <hr />
                            }
                            <div>
                                @if (TempData["FinalPrice"] == null)
                                {
                                    <h4 style="color:red">Thành tiền: @FormatCurrency(Model.TotalPrice) </h4>
                                }
                                else
                                {
                                    decimal finalPrice = TempData["FinalPrice"] != null ? Convert.ToDecimal(TempData["FinalPrice"]) : 0;
                                    decimal voucherPrice = TempData["VoucherPrice"] != null ? Convert.ToDecimal(TempData["VoucherPrice"]) : 0;
                                    <h4 style="color:red">Tổng tiền: @FormatCurrency(Model.TotalPrice) </h4>
                                    <h4 style="color:red">Giảm giá: -@FormatCurrency(voucherPrice) </h4>
                                    <h4 style="color:red">Thành tiền: @FormatCurrency(finalPrice) </h4>
                                }

                            </div>
                        </div>
                    </div>

                    <form asp-action="VerifyVoucher" asp-controller="ShoppingCart" method="post" class="mb-3">
                        <div class="input-group col-md-4">
                            <div class="input-group">
                                <input type="text" name="voucherCode" class="form-control" placeholder="Nhập mã giảm giá" />
                                <input type="hidden" name=totalMOMO value="@Model.TotalPrice" />
                                <button type="submit" class="btn btn-outline-secondary">Áp dụng</button>
                            </div>
                        </div>
                    </form>

                    <div class="mt-3 d-flex justify-content-start">
                        <section class="payment-selection">
                            <h3>Chọn phương thức thanh toán :</h3>

                            <input type="radio" id="momoPayment" name="paymentMethod" value="Momo">
                            <label for="momoPayment">Thanh toán Momo</label><br>

                            <input type="radio" id="codPayment" name="paymentMethod" value="Cod" checked>
                            <label for="codPayment">Thanh toán khi nhận hàng</label><br>

                            <form id="MomoForm" method="post" action="@Url.Action("Payment", "MomoPayment")" class="ml-3" style="display: none;">
                                @if (TempData["FinalPrice"] == null)
                                {
                                    <input type="hidden" id="totalMOMO" name="totalMOMO" value="@Model.TotalPrice" />
                                }
                                else
                                {
                                    <input type="hidden" id="totalMOMO" name="totalMOMO" value="@TempData["FinalPrice"]" />
                                }
                                <br />
                                <button type="submit" class="btn btn-primary btn-lg">Đặt hàng</button>
                            </form>

                            <form id="CodForm" asp-action="Checkout" asp-controller="ShoppingCart" method="get" class="ml-3" style="display: block;">
                                <br />
                                <button type="submit" class="btn btn-primary btn-lg">Đặt hàng</button>
                            </form>
                        </section>
                    </div>

                    <div class="mt-3 d-flex justify-content-start">
                        <a asp-controller="Home" asp-action="Index" class="btn btn-primary btn-lg">Tiếp tục mua hàng</a>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <h3>Giỏ hàng trống</h3>
                        <p>Bạn chưa thêm sản phẩm nào vào giỏ hàng.</p>
                        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary btn-lg">Tiếp tục mua hàng</a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<script src="~/js/site.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.5.2/underscore-min.js"></script>

<script>
    function updateQuantity(productId, button) {

        var input = document.getElementById('quantity-' + productId);
        var currentQuantity = parseInt(input.value, 10);
        var action = button.getAttribute('data-action');

        if (action === 'decrease' && currentQuantity > 1) {
            input.value = currentQuantity - 1;
        } else if (action === 'increase') {
            input.value = currentQuantity + 1;
        }

    }


    document.querySelectorAll('input[name="paymentMethod"]').forEach(function (radioButton) {
        radioButton.addEventListener('change', function () {
            var selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
            if (selectedPaymentMethod === 'Momo') {
                document.getElementById('MomoForm').style.display = 'block';
                document.getElementById('CodForm').style.display = 'none';
            } else if (selectedPaymentMethod === 'Cod') {
                document.getElementById('MomoForm').style.display = 'none';
                document.getElementById('CodForm').style.display = 'block';
            }
        });
    });

</script>

@functions {
    public static string FormatCurrency(decimal amount)
    {
        return amount.ToString("#,0 đ", new CultureInfo("vi-VN"));
    }
}

<style>
    .small-quantity-input {
        width: 70px;
        height: 25px;
        text-align: center;
    }

    .payment-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .quantity-control {
        display: flex;
        align-items: center;
    }

        .quantity-control button {
            border: none;
            background-color: transparent;
            font-size: 1.2em;
            cursor: pointer;
        }

    }

    .btn-lg {
        padding: 0.7rem 1.5rem;
        font-size: 1.2rem;
        line-height: 1.5;
        border-radius: 0.3rem;
    }

    .input-group.col-md-4 {
        width: 33.33%;
    }

    .ml-3 {
        margin-left: 1rem;
    }

    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield;
    }
</style>